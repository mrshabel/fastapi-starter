services:
    api:
        container_name: fastapi-starter-api
        build: .
        ports:
            # expose port to only application network
            - 8000
        depends_on:
            redis:
                condition: service_started
            startup:
                condition: service_completed_successfully
        volumes:
            - data:/mnt/data
        env_file:
            - .env.docker
        networks:
            - fastapi_starter_network
        healthcheck:
            # ping application with curl fast-fail
            test: ["CMD", "curl", "-f", "http://api:8000/health-check"]
            interval: 30s
            timeout: 30s
            retries: 5
            start_period: 30s

    startup:
        # ephemeral container for running startup scripts
        container_name: fastapi-starter-startup
        build: .
        image: fastapi-starter-api
        command: bash -c "alembic upgrade head && python -m src.scripts.seed"
        env_file:
            - .env.docker
        volumes:
            - data:/mnt/data
        networks:
            - fastapi_starter_network

    worker:
        container_name: fastapi-starter-worker
        build: .
        image: fastapi-starter-api
        command: celery --app src.tasks.main.celery_app worker --loglevel=INFO
        env_file:
            - .env.docker
        depends_on:
            - redis
        networks:
            - fastapi_starter_network

    # https://github.com/mher/flower/blob/master/docker-compose.yml
    worker-dashboard:
        # image: mher/flower
        container_name: fastapi-starter-worker-dashboard
        build: .
        image: fastapi-starter-api
        command: celery --app src.tasks.main.celery_app flower
        ports:
            - 5555
        env_file:
            - .env.docker
        depends_on:
            - redis
            - worker
        networks:
            - fastapi_starter_network

    redis:
        container_name: fastapi-starter-redis
        image: redis:7-alpine
        ports:
            - 6379
        networks:
            - fastapi_starter_network

    nginx:
        container_name: fastapi-starter-nginx
        image: nginx
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/certs:/etc/ssl
        depends_on:
            - api
        networks:
            - fastapi_starter_network

    prometheus:
        container_name: fastapi-starter-prometheus
        image: prom/prometheus
        ports:
            - 9090:9090
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        networks:
            - fastapi_starter_network

    grafana:
        container_name: fastapi-starter-grafana
        image: grafana/grafana-oss
        ports:
            - 3000
        # user: "0"
        volumes:
            - ./grafana-data:/var/lib/grafana
        networks:
            - fastapi_starter_network

volumes:
    data:
    grafana-data: {}

networks:
    fastapi_starter_network:
        driver: bridge
