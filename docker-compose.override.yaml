services:
    api:
        container_name: fastapi-starter-api
        build: .
        image: fastapi-starter-api
        command: bash -c "alembic upgrade head && fastapi dev --host 0.0.0.0 src/main.py"
        healthcheck:
            # ping application with curl fast-fail
            test: ["CMD", "curl", "-f", "http://localhost:8000/health-check"]
            interval: 30s
            timeout: 30s
            retries: 5
            start_period: 30s
        ports:
            - 8000:8000
        depends_on:
            - nginx
            - redis
            - startup
        volumes:
            - ./data:/mnt/data
            - ./src/migrations:/app/src/migrations
        env_file:
            - .env.docker
        develop:
            watch:
                # Sync the working directory with the `/app` directory in the container
                - action: sync
                  path: ./src
                  target: /app/src
                  # Exclude the project virtual environment
                  ignore:
                      - .venv/
                        - *__pycache__
                        - *.pyc

                # Rebuild the image on changes to the `pyproject.toml`
                - action: rebuild
                  path: ./pyproject.toml

    startup:
        # ephemeral container for running startup scripts
        container_name: fastapi-starter-startup
        build: .
        image: fastapi-starter-api
        command: bash -c "alembic upgrade head && python -m src.scripts.seed"
        env_file:
            - .env.docker
        volumes:
            - ./data:/mnt/data

    redis:
        container_name: fastapi-starter-redis
        image: redis:7-alpine
        depends_on:
            - nginx

    nginx:
        container_name: fastapi-starter-nginx
        image: nginx
        ports:
            # listen to http and https traffic
            - 8080:80
            - 8443:443
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/certs:/etc/ssl
